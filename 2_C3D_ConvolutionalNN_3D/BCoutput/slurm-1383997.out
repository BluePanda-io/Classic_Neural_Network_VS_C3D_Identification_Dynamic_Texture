/tmp/slurmd/job1383997/slurm_script: line 9: cd: qb18517/11_DT/dynamicTextureMain/4_C3D_ConvolutionalNN_3D/: No such file or directory
cuda:0
No handlers could be found for logger "libav.swscaler"
No handlers could be found for logger "libav.swscaler"
No handlers could be found for logger "libav.swscaler"
No handlers could be found for logger "libav.swscaler"
No handlers could be found for logger "libav.swscaler"
No handlers could be found for logger "libav.swscaler"
2_C3D_Model_BC.py:93: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.
  return F.log_softmax(x)
2_C3D_Model_BC.py:135: UserWarning: invalid index of a 0-dim tensor. This will be an error in PyTorch 0.5. Use tensor.item() to convert a 0-dim tensor to a Python number
  print(epoch,i,loss.data[0])#, loss.data[0])
(0, 1, tensor(3.9048, device='cuda:0'))
(0, 2, tensor(3.8142, device='cuda:0'))
(0, 3, tensor(3.7771, device='cuda:0'))
(0, 4, tensor(3.8318, device='cuda:0'))
(0, 5, tensor(3.8221, device='cuda:0'))
(0, 6, tensor(3.8445, device='cuda:0'))
(0, 7, tensor(3.8606, device='cuda:0'))
(0, 8, tensor(3.8346, device='cuda:0'))
No handlers could be found for logger "libav.swscaler"
(0, 9, tensor(3.8411, device='cuda:0'))
(0, 10, tensor(3.7708, device='cuda:0'))
(0, 11, tensor(3.7247, device='cuda:0'))
(0, 12, tensor(3.8995, device='cuda:0'))
(0, 13, tensor(3.8501, device='cuda:0'))
(0, 14, tensor(3.7628, device='cuda:0'))
No handlers could be found for logger "libav.swscaler"
(0, 15, tensor(3.7775, device='cuda:0'))
(0, 16, tensor(3.8323, device='cuda:0'))
(0, 17, tensor(3.8271, device='cuda:0'))
(0, 18, tensor(3.7841, device='cuda:0'))
(0, 19, tensor(3.8092, device='cuda:0'))
(0, 20, tensor(3.6923, device='cuda:0'))
(0, 21, tensor(3.8313, device='cuda:0'))
(0, 22, tensor(3.7217, device='cuda:0'))
(0, 23, tensor(3.9071, device='cuda:0'))
(0, 24, tensor(3.9028, device='cuda:0'))
(0, 25, tensor(3.7827, device='cuda:0'))
(0, 26, tensor(3.7412, device='cuda:0'))
(0, 27, tensor(3.7978, device='cuda:0'))
(0, 28, tensor(3.8601, device='cuda:0'))
(0, 29, tensor(3.7450, device='cuda:0'))
(0, 30, tensor(3.7542, device='cuda:0'))
(0, 31, tensor(3.7506, device='cuda:0'))
(0, 32, tensor(3.7482, device='cuda:0'))
(0, 33, tensor(3.6631, device='cuda:0'))
(0, 34, tensor(3.9583, device='cuda:0'))
(0, 35, tensor(3.7627, device='cuda:0'))
(0, 36, tensor(3.8825, device='cuda:0'))
(0, 37, tensor(3.7627, device='cuda:0'))
(0, 38, tensor(3.7136, device='cuda:0'))
(0, 39, tensor(3.7031, device='cuda:0'))
(0, 40, tensor(3.8095, device='cuda:0'))
(0, 41, tensor(3.5684, device='cuda:0'))
(0, 42, tensor(4.0587, device='cuda:0'))
(0, 43, tensor(3.6742, device='cuda:0'))
(0, 44, tensor(3.7620, device='cuda:0'))
(0, 45, tensor(3.8487, device='cuda:0'))
(0, 46, tensor(3.7662, device='cuda:0'))
(0, 47, tensor(3.9113, device='cuda:0'))
(0, 48, tensor(3.8063, device='cuda:0'))
(0, 49, tensor(3.5966, device='cuda:0'))
(0, 50, tensor(3.7364, device='cuda:0'))
(0, 51, tensor(3.7093, device='cuda:0'))
(0, 52, tensor(4.0449, device='cuda:0'))
(0, 53, tensor(3.7208, device='cuda:0'))
(0, 54, tensor(3.6474, device='cuda:0'))
(0, 55, tensor(3.8533, device='cuda:0'))
(0, 56, tensor(3.7403, device='cuda:0'))
(0, 57, tensor(3.7505, device='cuda:0'))
(0, 58, tensor(3.6382, device='cuda:0'))
(0, 59, tensor(3.6151, device='cuda:0'))
(0, 60, tensor(3.8941, device='cuda:0'))
(0, 61, tensor(3.7793, device='cuda:0'))
(0, 62, tensor(3.7972, device='cuda:0'))
(0, 63, tensor(3.9020, device='cuda:0'))
(0, 64, tensor(3.7379, device='cuda:0'))
(0, 65, tensor(3.7695, device='cuda:0'))
(0, 66, tensor(3.7360, device='cuda:0'))
(0, 67, tensor(3.6364, device='cuda:0'))
(0, 68, tensor(3.6982, device='cuda:0'))
(0, 69, tensor(3.6874, device='cuda:0'))
(0, 70, tensor(3.5127, device='cuda:0'))
(0, 71, tensor(3.7244, device='cuda:0'))
(0, 72, tensor(3.5830, device='cuda:0'))
(0, 73, tensor(3.5927, device='cuda:0'))
(0, 74, tensor(4.1178, device='cuda:0'))
(0, 75, tensor(3.9042, device='cuda:0'))
(0, 76, tensor(3.8020, device='cuda:0'))
(0, 77, tensor(3.5303, device='cuda:0'))
(0, 78, tensor(3.7528, device='cuda:0'))
(0, 79, tensor(3.7068, device='cuda:0'))
(0, 80, tensor(3.9122, device='cuda:0'))
(0, 81, tensor(3.6519, device='cuda:0'))
(0, 82, tensor(3.6966, device='cuda:0'))
(0, 83, tensor(3.6466, device='cuda:0'))
(0, 84, tensor(3.6905, device='cuda:0'))
(0, 85, tensor(3.9056, device='cuda:0'))
(0, 86, tensor(3.7455, device='cuda:0'))
(0, 87, tensor(3.8115, device='cuda:0'))
(0, 88, tensor(3.7528, device='cuda:0'))
(0, 89, tensor(3.9557, device='cuda:0'))
(0, 90, tensor(3.7575, device='cuda:0'))
(0, 91, tensor(3.7830, device='cuda:0'))
(0, 92, tensor(3.7097, device='cuda:0'))
(0, 93, tensor(3.7619, device='cuda:0'))
(0, 94, tensor(3.6125, device='cuda:0'))
(0, 95, tensor(3.7066, device='cuda:0'))
(0, 96, tensor(3.6995, device='cuda:0'))
(0, 97, tensor(3.8888, device='cuda:0'))
(0, 98, tensor(3.7702, device='cuda:0'))
(0, 99, tensor(3.7972, device='cuda:0'))
(0, 100, tensor(3.7594, device='cuda:0'))
(0, 101, tensor(3.9076, device='cuda:0'))
(0, 102, tensor(3.7121, device='cuda:0'))
(0, 103, tensor(3.5553, device='cuda:0'))
(0, 104, tensor(3.8707, device='cuda:0'))
(0, 105, tensor(3.6263, device='cuda:0'))
(0, 106, tensor(3.7067, device='cuda:0'))
(0, 107, tensor(3.5519, device='cuda:0'))
(0, 108, tensor(3.3971, device='cuda:0'))
(0, 109, tensor(3.4154, device='cuda:0'))
(0, 110, tensor(3.9803, device='cuda:0'))
(0, 111, tensor(3.4279, device='cuda:0'))
(0, 112, tensor(3.7868, device='cuda:0'))
(0, 113, tensor(3.9709, device='cuda:0'))
(0, 114, tensor(3.7482, device='cuda:0'))
(0, 115, tensor(3.8671, device='cuda:0'))
(0, 116, tensor(3.7239, device='cuda:0'))
(0, 117, tensor(3.8829, device='cuda:0'))
(0, 118, tensor(3.5607, device='cuda:0'))
(0, 119, tensor(3.7440, device='cuda:0'))
(0, 120, tensor(3.7666, device='cuda:0'))
(0, 121, tensor(3.6855, device='cuda:0'))
(0, 122, tensor(3.9359, device='cuda:0'))
(0, 123, tensor(3.6890, device='cuda:0'))
(0, 124, tensor(3.6532, device='cuda:0'))
(0, 125, tensor(3.7412, device='cuda:0'))
(0, 126, tensor(3.8478, device='cuda:0'))
(0, 127, tensor(3.8088, device='cuda:0'))
(0, 128, tensor(3.8504, device='cuda:0'))
(0, 129, tensor(3.6633, device='cuda:0'))
(0, 130, tensor(3.6137, device='cuda:0'))
(0, 131, tensor(3.7538, device='cuda:0'))
(0, 132, tensor(3.6014, device='cuda:0'))
(0, 133, tensor(3.7758, device='cuda:0'))
(0, 134, tensor(3.5726, device='cuda:0'))
(0, 135, tensor(3.7038, device='cuda:0'))
(0, 136, tensor(3.8897, device='cuda:0'))
(0, 137, tensor(3.8221, device='cuda:0'))
(0, 138, tensor(3.8035, device='cuda:0'))
(0, 139, tensor(3.9664, device='cuda:0'))
(0, 140, tensor(3.9350, device='cuda:0'))
(0, 141, tensor(3.6671, device='cuda:0'))
(0, 142, tensor(3.7436, device='cuda:0'))
(0, 143, tensor(3.7951, device='cuda:0'))
(0, 144, tensor(3.7667, device='cuda:0'))
(0, 145, tensor(3.8159, device='cuda:0'))
(0, 146, tensor(3.8845, device='cuda:0'))
(0, 147, tensor(3.8000, device='cuda:0'))
(0, 148, tensor(3.7686, device='cuda:0'))
(0, 149, tensor(3.5559, device='cuda:0'))
(0, 150, tensor(3.6884, device='cuda:0'))
(0, 151, tensor(3.6358, device='cuda:0'))
(0, 152, tensor(3.6704, device='cuda:0'))
(0, 153, tensor(3.6463, device='cuda:0'))
(0, 154, tensor(3.6519, device='cuda:0'))
(0, 155, tensor(3.5240, device='cuda:0'))
(0, 156, tensor(3.7253, device='cuda:0'))
(0, 157, tensor(3.8726, device='cuda:0'))
(0, 158, tensor(3.3782, device='cuda:0'))
(0, 159, tensor(3.8921, device='cuda:0'))
(0, 160, tensor(3.8349, device='cuda:0'))
(0, 161, tensor(3.6531, device='cuda:0'))
(0, 162, tensor(3.7117, device='cuda:0'))
(0, 163, tensor(3.7097, device='cuda:0'))
(0, 164, tensor(3.5989, device='cuda:0'))
(0, 165, tensor(3.4373, device='cuda:0'))
(0, 166, tensor(3.9086, device='cuda:0'))
(0, 167, tensor(3.5678, device='cuda:0'))
(0, 168, tensor(3.8237, device='cuda:0'))
(0, 169, tensor(3.8824, device='cuda:0'))
(0, 170, tensor(3.5898, device='cuda:0'))
(0, 171, tensor(3.7177, device='cuda:0'))
(0, 172, tensor(3.7382, device='cuda:0'))
(0, 173, tensor(3.7643, device='cuda:0'))
(0, 174, tensor(3.6402, device='cuda:0'))
(0, 175, tensor(3.8070, device='cuda:0'))
(0, 176, tensor(3.9481, device='cuda:0'))
(0, 177, tensor(3.6386, device='cuda:0'))
(0, 178, tensor(3.6290, device='cuda:0'))
(0, 179, tensor(3.7887, device='cuda:0'))
(0, 180, tensor(3.6232, device='cuda:0'))
(0, 181, tensor(3.7290, device='cuda:0'))
(0, 182, tensor(3.6416, device='cuda:0'))
(0, 183, tensor(3.5156, device='cuda:0'))
(0, 184, tensor(3.2625, device='cuda:0'))
(0, 185, tensor(3.4474, device='cuda:0'))
(0, 186, tensor(3.6429, device='cuda:0'))
(0, 187, tensor(3.3627, device='cuda:0'))
(0, 188, tensor(3.5130, device='cuda:0'))
(0, 189, tensor(4.0125, device='cuda:0'))
(0, 190, tensor(3.8839, device='cuda:0'))
(0, 191, tensor(3.5474, device='cuda:0'))
(0, 192, tensor(3.6489, device='cuda:0'))
(0, 193, tensor(3.6833, device='cuda:0'))
(0, 194, tensor(3.8186, device='cuda:0'))
(0, 195, tensor(3.6642, device='cuda:0'))
(0, 196, tensor(3.5535, device='cuda:0'))
(0, 197, tensor(3.5570, device='cuda:0'))
(0, 198, tensor(3.8372, device='cuda:0'))
(0, 199, tensor(3.6407, device='cuda:0'))
(0, 200, tensor(3.5794, device='cuda:0'))
(0, 201, tensor(3.4451, device='cuda:0'))
(0, 202, tensor(3.8270, device='cuda:0'))
(0, 203, tensor(3.6637, device='cuda:0'))
(0, 204, tensor(3.8320, device='cuda:0'))
(0, 205, tensor(3.5745, device='cuda:0'))
(0, 206, tensor(3.7463, device='cuda:0'))
(0, 207, tensor(3.6213, device='cuda:0'))
(0, 208, tensor(3.4822, device='cuda:0'))
(0, 209, tensor(3.5783, device='cuda:0'))
(0, 210, tensor(4.0455, device='cuda:0'))
(0, 211, tensor(3.6427, device='cuda:0'))
(0, 212, tensor(3.9318, device='cuda:0'))
(0, 213, tensor(3.3842, device='cuda:0'))
(0, 214, tensor(3.6649, device='cuda:0'))
(0, 215, tensor(3.6603, device='cuda:0'))
(0, 216, tensor(3.7096, device='cuda:0'))
(0, 217, tensor(3.4267, device='cuda:0'))
(0, 218, tensor(3.5624, device='cuda:0'))
(0, 219, tensor(3.6547, device='cuda:0'))
(0, 220, tensor(4.0308, device='cuda:0'))
(0, 221, tensor(3.6601, device='cuda:0'))
(0, 222, tensor(3.6544, device='cuda:0'))
(0, 223, tensor(3.7789, device='cuda:0'))
(0, 224, tensor(3.2956, device='cuda:0'))
(0, 225, tensor(3.6222, device='cuda:0'))
(0, 226, tensor(3.5754, device='cuda:0'))
(0, 227, tensor(3.4502, device='cuda:0'))
(0, 228, tensor(3.6698, device='cuda:0'))
(0, 229, tensor(3.7515, device='cuda:0'))
(0, 230, tensor(3.7462, device='cuda:0'))
(0, 231, tensor(3.6453, device='cuda:0'))
(0, 232, tensor(4.0220, device='cuda:0'))
(0, 233, tensor(3.8211, device='cuda:0'))
(0, 234, tensor(3.8163, device='cuda:0'))
(0, 235, tensor(3.6018, device='cuda:0'))
(0, 236, tensor(3.8476, device='cuda:0'))
(0, 237, tensor(3.8035, device='cuda:0'))
(0, 238, tensor(3.8875, device='cuda:0'))
(0, 239, tensor(3.8975, device='cuda:0'))
(0, 240, tensor(3.6925, device='cuda:0'))
(0, 241, tensor(3.7723, device='cuda:0'))
(0, 242, tensor(3.7800, device='cuda:0'))
(0, 243, tensor(3.7786, device='cuda:0'))
(0, 244, tensor(3.6155, device='cuda:0'))
(0, 245, tensor(3.7259, device='cuda:0'))
(0, 246, tensor(3.8122, device='cuda:0'))
(0, 247, tensor(3.7124, device='cuda:0'))
(0, 248, tensor(3.6223, device='cuda:0'))
(0, 249, tensor(3.7326, device='cuda:0'))
(0, 250, tensor(3.6846, device='cuda:0'))
(0, 251, tensor(3.4505, device='cuda:0'))
(0, 252, tensor(3.6082, device='cuda:0'))
(0, 253, tensor(3.8292, device='cuda:0'))
(0, 254, tensor(3.5370, device='cuda:0'))
(0, 255, tensor(3.3503, device='cuda:0'))
(0, 256, tensor(3.8798, device='cuda:0'))
(0, 257, tensor(3.7352, device='cuda:0'))
(0, 258, tensor(3.4803, device='cuda:0'))
(0, 259, tensor(3.7087, device='cuda:0'))
(0, 260, tensor(3.8746, device='cuda:0'))
(0, 261, tensor(3.6468, device='cuda:0'))
(0, 262, tensor(3.5597, device='cuda:0'))
(0, 263, tensor(3.8655, device='cuda:0'))
(0, 264, tensor(3.7399, device='cuda:0'))
(0, 265, tensor(3.7830, device='cuda:0'))
(0, 266, tensor(3.6807, device='cuda:0'))
(0, 267, tensor(3.7226, device='cuda:0'))
(0, 268, tensor(3.6516, device='cuda:0'))
(0, 269, tensor(3.5416, device='cuda:0'))
(0, 270, tensor(3.4801, device='cuda:0'))
(0, 271, tensor(3.5591, device='cuda:0'))
(0, 272, tensor(3.4314, device='cuda:0'))
(0, 273, tensor(3.8352, device='cuda:0'))
(0, 274, tensor(3.3371, device='cuda:0'))
(0, 275, tensor(3.7341, device='cuda:0'))
(0, 276, tensor(3.6308, device='cuda:0'))
(0, 277, tensor(3.4959, device='cuda:0'))
(0, 278, tensor(3.9324, device='cuda:0'))
(0, 279, tensor(3.7958, device='cuda:0'))
(0, 280, tensor(3.6494, device='cuda:0'))
(0, 281, tensor(3.8112, device='cuda:0'))
(0, 282, tensor(3.5765, device='cuda:0'))
(0, 283, tensor(3.7517, device='cuda:0'))
(0, 284, tensor(3.6357, device='cuda:0'))
(0, 285, tensor(3.6282, device='cuda:0'))
(0, 286, tensor(3.5862, device='cuda:0'))
(0, 287, tensor(4.0416, device='cuda:0'))
(0, 288, tensor(3.4540, device='cuda:0'))
(0, 289, tensor(3.7324, device='cuda:0'))
(0, 290, tensor(3.4700, device='cuda:0'))
(0, 291, tensor(3.6475, device='cuda:0'))
(0, 292, tensor(3.7450, device='cuda:0'))
(0, 293, tensor(3.7227, device='cuda:0'))
(0, 294, tensor(3.7376, device='cuda:0'))
(0, 295, tensor(3.4259, device='cuda:0'))
(0, 296, tensor(3.6856, device='cuda:0'))
(0, 297, tensor(3.4997, device='cuda:0'))
(0, 298, tensor(3.7299, device='cuda:0'))
(0, 299, tensor(3.4822, device='cuda:0'))
(0, 300, tensor(3.4176, device='cuda:0'))
(0, 301, tensor(3.8086, device='cuda:0'))
(0, 302, tensor(3.8005, device='cuda:0'))
(0, 303, tensor(3.5853, device='cuda:0'))
(0, 304, tensor(3.5287, device='cuda:0'))
(0, 305, tensor(3.5735, device='cuda:0'))
(0, 306, tensor(3.8154, device='cuda:0'))
(0, 307, tensor(3.2006, device='cuda:0'))
(0, 308, tensor(3.5039, device='cuda:0'))
(0, 309, tensor(3.4264, device='cuda:0'))
(0, 310, tensor(3.8726, device='cuda:0'))
(0, 311, tensor(3.3232, device='cuda:0'))
(0, 312, tensor(3.7469, device='cuda:0'))
(0, 313, tensor(3.2146, device='cuda:0'))
(0, 314, tensor(3.3553, device='cuda:0'))
(0, 315, tensor(3.7665, device='cuda:0'))
(0, 316, tensor(3.5713, device='cuda:0'))
(0, 317, tensor(3.5321, device='cuda:0'))
(0, 318, tensor(3.4269, device='cuda:0'))
(0, 319, tensor(3.7777, device='cuda:0'))
(0, 320, tensor(3.5669, device='cuda:0'))
(0, 321, tensor(3.6967, device='cuda:0'))
(0, 322, tensor(3.1602, device='cuda:0'))
(0, 323, tensor(3.7652, device='cuda:0'))
(0, 324, tensor(3.5556, device='cuda:0'))
(0, 325, tensor(3.9367, device='cuda:0'))
(0, 326, tensor(3.9237, device='cuda:0'))
(0, 327, tensor(3.8230, device='cuda:0'))
(0, 328, tensor(3.5886, device='cuda:0'))
(0, 329, tensor(3.5466, device='cuda:0'))
(0, 330, tensor(3.6840, device='cuda:0'))
(0, 331, tensor(3.4990, device='cuda:0'))
(0, 332, tensor(3.8186, device='cuda:0'))
(0, 333, tensor(3.8272, device='cuda:0'))
(0, 334, tensor(3.5785, device='cuda:0'))
(0, 335, tensor(3.8072, device='cuda:0'))
(0, 336, tensor(3.8186, device='cuda:0'))
(0, 337, tensor(3.6330, device='cuda:0'))
(0, 338, tensor(3.6602, device='cuda:0'))
(0, 339, tensor(3.5801, device='cuda:0'))
(0, 340, tensor(3.4494, device='cuda:0'))
(0, 341, tensor(3.4639, device='cuda:0'))
(0, 342, tensor(3.8080, device='cuda:0'))
(0, 343, tensor(3.6183, device='cuda:0'))
(0, 344, tensor(3.6280, device='cuda:0'))
(0, 345, tensor(3.6645, device='cuda:0'))
(0, 346, tensor(3.7202, device='cuda:0'))
(0, 347, tensor(3.5043, device='cuda:0'))
(0, 348, tensor(3.5066, device='cuda:0'))
(0, 349, tensor(3.4467, device='cuda:0'))
(0, 350, tensor(3.5331, device='cuda:0'))
(0, 351, tensor(3.1537, device='cuda:0'))
(0, 352, tensor(3.3394, device='cuda:0'))
(0, 353, tensor(3.5280, device='cuda:0'))
(0, 354, tensor(3.8181, device='cuda:0'))
(0, 355, tensor(3.6220, device='cuda:0'))
(0, 356, tensor(3.6931, device='cuda:0'))
(0, 357, tensor(3.5783, device='cuda:0'))
(0, 358, tensor(3.6032, device='cuda:0'))
(0, 359, tensor(3.6491, device='cuda:0'))
(0, 360, tensor(3.4540, device='cuda:0'))
(0, 361, tensor(3.2307, device='cuda:0'))
(0, 362, tensor(3.6738, device='cuda:0'))
(0, 363, tensor(3.9778, device='cuda:0'))
(0, 364, tensor(3.8558, device='cuda:0'))
(0, 365, tensor(3.2784, device='cuda:0'))
(0, 366, tensor(3.7070, device='cuda:0'))
(0, 367, tensor(3.3087, device='cuda:0'))
(0, 368, tensor(3.8085, device='cuda:0'))
(0, 369, tensor(3.6595, device='cuda:0'))
(0, 370, tensor(3.5394, device='cuda:0'))
(0, 371, tensor(3.5904, device='cuda:0'))
(0, 372, tensor(3.4847, device='cuda:0'))
(0, 373, tensor(3.8167, device='cuda:0'))
(0, 374, tensor(3.9354, device='cuda:0'))
(0, 375, tensor(3.9756, device='cuda:0'))
(0, 376, tensor(3.7982, device='cuda:0'))
(0, 377, tensor(3.5824, device='cuda:0'))
(0, 378, tensor(3.6432, device='cuda:0'))
(0, 379, tensor(3.4590, device='cuda:0'))
(0, 380, tensor(3.4193, device='cuda:0'))
(0, 381, tensor(3.6622, device='cuda:0'))
(0, 382, tensor(3.8837, device='cuda:0'))
(0, 383, tensor(3.1342, device='cuda:0'))
(0, 384, tensor(3.2507, device='cuda:0'))
(0, 385, tensor(3.5391, device='cuda:0'))
(0, 386, tensor(3.8158, device='cuda:0'))
(0, 387, tensor(3.6164, device='cuda:0'))
(0, 388, tensor(3.7019, device='cuda:0'))
(0, 389, tensor(3.5219, device='cuda:0'))
(0, 390, tensor(3.4332, device='cuda:0'))
(0, 391, tensor(3.5968, device='cuda:0'))
(0, 392, tensor(3.7782, device='cuda:0'))
(0, 393, tensor(3.6525, device='cuda:0'))
(0, 394, tensor(3.4625, device='cuda:0'))
(0, 395, tensor(3.4547, device='cuda:0'))
(0, 396, tensor(3.2920, device='cuda:0'))
(0, 397, tensor(3.7235, device='cuda:0'))
(0, 398, tensor(3.8973, device='cuda:0'))
(0, 399, tensor(3.3673, device='cuda:0'))
(0, 400, tensor(3.5035, device='cuda:0'))
(0, 401, tensor(3.2055, device='cuda:0'))
(0, 402, tensor(3.5229, device='cuda:0'))
(0, 403, tensor(3.0777, device='cuda:0'))
(0, 404, tensor(3.9147, device='cuda:0'))
(0, 405, tensor(3.5887, device='cuda:0'))
(0, 406, tensor(3.4887, device='cuda:0'))
(0, 407, tensor(3.5533, device='cuda:0'))
(0, 408, tensor(3.5656, device='cuda:0'))
(0, 409, tensor(3.6241, device='cuda:0'))
(0, 410, tensor(3.5013, device='cuda:0'))
(0, 411, tensor(3.3470, device='cuda:0'))
(0, 412, tensor(3.6239, device='cuda:0'))
(0, 413, tensor(3.6126, device='cuda:0'))
(0, 414, tensor(3.4733, device='cuda:0'))
(0, 415, tensor(3.7382, device='cuda:0'))
(0, 416, tensor(3.9014, device='cuda:0'))
(0, 417, tensor(3.4547, device='cuda:0'))
(0, 418, tensor(3.5096, device='cuda:0'))
(0, 419, tensor(3.7767, device='cuda:0'))
(0, 420, tensor(3.6800, device='cuda:0'))
(0, 421, tensor(3.5296, device='cuda:0'))
(0, 422, tensor(3.6598, device='cuda:0'))
(0, 423, tensor(3.5848, device='cuda:0'))
(0, 424, tensor(3.6176, device='cuda:0'))
(0, 425, tensor(3.7793, device='cuda:0'))
(0, 426, tensor(3.3997, device='cuda:0'))
(0, 427, tensor(3.4322, device='cuda:0'))
(0, 428, tensor(3.3709, device='cuda:0'))
(0, 429, tensor(3.1942, device='cuda:0'))
(0, 430, tensor(3.5278, device='cuda:0'))
(0, 431, tensor(4.0292, device='cuda:0'))
(0, 432, tensor(3.5825, device='cuda:0'))
(0, 433, tensor(2.8885, device='cuda:0'))
(0, 434, tensor(3.0074, device='cuda:0'))
(0, 435, tensor(4.0702, device='cuda:0'))
(0, 436, tensor(3.0886, device='cuda:0'))
(0, 437, tensor(3.5609, device='cuda:0'))
(0, 438, tensor(3.6543, device='cuda:0'))
(0, 439, tensor(3.9941, device='cuda:0'))
(0, 440, tensor(3.3493, device='cuda:0'))
(0, 441, tensor(3.4849, device='cuda:0'))
(0, 442, tensor(3.4414, device='cuda:0'))
(0, 443, tensor(3.5483, device='cuda:0'))
(0, 444, tensor(3.5552, device='cuda:0'))
(0, 445, tensor(3.1200, device='cuda:0'))
(0, 446, tensor(3.9220, device='cuda:0'))
(0, 447, tensor(3.6538, device='cuda:0'))
(0, 448, tensor(3.8430, device='cuda:0'))
(0, 449, tensor(3.7430, device='cuda:0'))
(0, 450, tensor(3.3592, device='cuda:0'))
(0, 451, tensor(3.7735, device='cuda:0'))
(0, 452, tensor(3.7412, device='cuda:0'))
(0, 453, tensor(3.3888, device='cuda:0'))
(0, 454, tensor(3.3701, device='cuda:0'))
(0, 455, tensor(3.5691, device='cuda:0'))
(0, 456, tensor(3.8183, device='cuda:0'))
(0, 457, tensor(3.2749, device='cuda:0'))
(0, 458, tensor(3.3400, device='cuda:0'))
(0, 459, tensor(3.2407, device='cuda:0'))
(0, 460, tensor(3.2832, device='cuda:0'))
(0, 461, tensor(3.7445, device='cuda:0'))
(0, 462, tensor(3.9325, device='cuda:0'))
(0, 463, tensor(3.5813, device='cuda:0'))
(0, 464, tensor(3.6845, device='cuda:0'))
(0, 465, tensor(3.5570, device='cuda:0'))
(0, 466, tensor(3.2061, device='cuda:0'))
(0, 467, tensor(3.4259, device='cuda:0'))
(0, 468, tensor(3.6380, device='cuda:0'))
(0, 469, tensor(3.1556, device='cuda:0'))
(0, 470, tensor(3.4916, device='cuda:0'))
(0, 471, tensor(3.7518, device='cuda:0'))
(0, 472, tensor(3.6848, device='cuda:0'))
(0, 473, tensor(3.7354, device='cuda:0'))
(0, 474, tensor(3.7942, device='cuda:0'))
(0, 475, tensor(3.5157, device='cuda:0'))
(0, 476, tensor(3.5777, device='cuda:0'))
(0, 477, tensor(3.7584, device='cuda:0'))
(0, 478, tensor(3.3055, device='cuda:0'))
(0, 479, tensor(3.5425, device='cuda:0'))
(0, 480, tensor(3.6237, device='cuda:0'))
(0, 481, tensor(3.4862, device='cuda:0'))
(0, 482, tensor(3.6286, device='cuda:0'))
(0, 483, tensor(3.5115, device='cuda:0'))
(0, 484, tensor(2.8838, device='cuda:0'))
(0, 485, tensor(3.8535, device='cuda:0'))
(0, 486, tensor(3.5453, device='cuda:0'))
(0, 487, tensor(3.3864, device='cuda:0'))
(0, 488, tensor(3.0416, device='cuda:0'))
(0, 489, tensor(2.9140, device='cuda:0'))
(0, 490, tensor(3.4106, device='cuda:0'))
(0, 491, tensor(3.2784, device='cuda:0'))
(0, 492, tensor(3.7034, device='cuda:0'))
(0, 493, tensor(3.5745, device='cuda:0'))
(0, 494, tensor(3.6065, device='cuda:0'))
(0, 495, tensor(3.3663, device='cuda:0'))
(0, 496, tensor(3.5666, device='cuda:0'))
(0, 497, tensor(3.6889, device='cuda:0'))
(0, 498, tensor(3.4527, device='cuda:0'))
(0, 499, tensor(3.5310, device='cuda:0'))
(0, 500, tensor(3.2234, device='cuda:0'))
(0, 501, tensor(3.4158, device='cuda:0'))
(0, 502, tensor(3.7243, device='cuda:0'))
(0, 503, tensor(3.3231, device='cuda:0'))
(0, 504, tensor(3.5455, device='cuda:0'))
(0, 505, tensor(3.5277, device='cuda:0'))
(0, 506, tensor(3.3229, device='cuda:0'))
(0, 507, tensor(3.9675, device='cuda:0'))
(0, 508, tensor(3.4329, device='cuda:0'))
(0, 509, tensor(3.5381, device='cuda:0'))
(0, 510, tensor(3.8949, device='cuda:0'))
(0, 511, tensor(3.5142, device='cuda:0'))
(0, 512, tensor(3.5501, device='cuda:0'))
(0, 513, tensor(3.1280, device='cuda:0'))
(0, 514, tensor(3.4773, device='cuda:0'))
(0, 515, tensor(3.4762, device='cuda:0'))
(0, 516, tensor(3.9376, device='cuda:0'))
(0, 517, tensor(3.4275, device='cuda:0'))
(0, 518, tensor(3.6977, device='cuda:0'))
(0, 519, tensor(3.2852, device='cuda:0'))
(0, 520, tensor(3.4254, device='cuda:0'))
(0, 521, tensor(3.5294, device='cuda:0'))
(0, 522, tensor(3.5315, device='cuda:0'))
(0, 523, tensor(3.1769, device='cuda:0'))
(0, 524, tensor(3.7678, device='cuda:0'))
(0, 525, tensor(2.8291, device='cuda:0'))
(0, 526, tensor(3.6935, device='cuda:0'))
(0, 527, tensor(3.1500, device='cuda:0'))
(0, 528, tensor(3.3844, device='cuda:0'))
(0, 529, tensor(2.9862, device='cuda:0'))
(0, 530, tensor(3.5150, device='cuda:0'))
(0, 531, tensor(3.4871, device='cuda:0'))
(0, 532, tensor(3.4183, device='cuda:0'))
(0, 533, tensor(3.4711, device='cuda:0'))
(0, 534, tensor(3.2068, device='cuda:0'))
(0, 535, tensor(3.1681, device='cuda:0'))
(0, 536, tensor(3.5712, device='cuda:0'))
(0, 537, tensor(3.8217, device='cuda:0'))
(0, 538, tensor(3.4263, device='cuda:0'))
(0, 539, tensor(3.5828, device='cuda:0'))
(0, 540, tensor(3.5299, device='cuda:0'))
(0, 541, tensor(4.0442, device='cuda:0'))
(0, 542, tensor(3.3191, device='cuda:0'))
(0, 543, tensor(3.5915, device='cuda:0'))
(0, 544, tensor(3.3470, device='cuda:0'))
(0, 545, tensor(4.1544, device='cuda:0'))
(0, 546, tensor(3.5953, device='cuda:0'))
(0, 547, tensor(3.2488, device='cuda:0'))
(0, 548, tensor(3.7347, device='cuda:0'))
(0, 549, tensor(3.3505, device='cuda:0'))
(0, 550, tensor(3.3187, device='cuda:0'))
(0, 551, tensor(3.9178, device='cuda:0'))
(0, 552, tensor(3.1959, device='cuda:0'))
(0, 553, tensor(3.9415, device='cuda:0'))
(0, 554, tensor(3.6562, device='cuda:0'))
(0, 555, tensor(3.8873, device='cuda:0'))
(0, 556, tensor(3.6820, device='cuda:0'))
(0, 557, tensor(3.6895, device='cuda:0'))
(0, 558, tensor(3.4939, device='cuda:0'))
(0, 559, tensor(3.4439, device='cuda:0'))
(0, 560, tensor(3.2895, device='cuda:0'))
(0, 561, tensor(3.7557, device='cuda:0'))
(0, 562, tensor(3.3314, device='cuda:0'))
(0, 563, tensor(3.7341, device='cuda:0'))
(0, 564, tensor(3.6243, device='cuda:0'))
(0, 565, tensor(3.1648, device='cuda:0'))
(0, 566, tensor(3.3424, device='cuda:0'))
(0, 567, tensor(3.3002, device='cuda:0'))
(0, 568, tensor(3.4798, device='cuda:0'))
(0, 569, tensor(3.6447, device='cuda:0'))
(0, 570, tensor(3.1793, device='cuda:0'))
(0, 571, tensor(3.2541, device='cuda:0'))
(0, 572, tensor(3.3367, device='cuda:0'))
(0, 573, tensor(3.4969, device='cuda:0'))
(0, 574, tensor(3.8537, device='cuda:0'))
(0, 575, tensor(3.4307, device='cuda:0'))
(0, 576, tensor(3.7886, device='cuda:0'))
(0, 577, tensor(3.0336, device='cuda:0'))
(0, 578, tensor(3.3896, device='cuda:0'))
(0, 579, tensor(3.3892, device='cuda:0'))
(0, 580, tensor(3.7890, device='cuda:0'))
(0, 581, tensor(3.4758, device='cuda:0'))
(0, 582, tensor(4.0637, device='cuda:0'))
(0, 583, tensor(3.5572, device='cuda:0'))
(0, 584, tensor(3.4548, device='cuda:0'))
(0, 585, tensor(3.1427, device='cuda:0'))
(0, 586, tensor(3.3257, device='cuda:0'))
(0, 587, tensor(3.5593, device='cuda:0'))
(0, 588, tensor(3.5853, device='cuda:0'))
(0, 589, tensor(3.5868, device='cuda:0'))
(0, 590, tensor(3.5095, device='cuda:0'))
(0, 591, tensor(3.7908, device='cuda:0'))
(0, 592, tensor(3.3558, device='cuda:0'))
(0, 593, tensor(3.1184, device='cuda:0'))
(0, 594, tensor(3.6766, device='cuda:0'))
(0, 595, tensor(3.5471, device='cuda:0'))
(0, 596, tensor(3.4560, device='cuda:0'))
(0, 597, tensor(3.4903, device='cuda:0'))
(0, 598, tensor(3.5381, device='cuda:0'))
(0, 599, tensor(3.2804, device='cuda:0'))
(0, 600, tensor(3.5450, device='cuda:0'))
(0, 601, tensor(3.3583, device='cuda:0'))
(0, 602, tensor(3.3458, device='cuda:0'))
(0, 603, tensor(3.3604, device='cuda:0'))
(0, 604, tensor(3.7837, device='cuda:0'))
(0, 605, tensor(3.1466, device='cuda:0'))
(0, 606, tensor(3.1896, device='cuda:0'))
(0, 607, tensor(3.8150, device='cuda:0'))
(0, 608, tensor(3.6382, device='cuda:0'))
(0, 609, tensor(3.9578, device='cuda:0'))
(0, 610, tensor(3.7352, device='cuda:0'))
(0, 611, tensor(3.6698, device='cuda:0'))
(0, 612, tensor(3.3050, device='cuda:0'))
(0, 613, tensor(3.2661, device='cuda:0'))
(0, 614, tensor(3.1377, device='cuda:0'))
(0, 615, tensor(3.2684, device='cuda:0'))
(0, 616, tensor(3.7973, device='cuda:0'))
(0, 617, tensor(3.1139, device='cuda:0'))
(0, 618, tensor(3.0838, device='cuda:0'))
(0, 619, tensor(3.5071, device='cuda:0'))
(0, 620, tensor(3.4147, device='cuda:0'))
(0, 621, tensor(3.1456, device='cuda:0'))
(0, 622, tensor(3.1591, device='cuda:0'))
(0, 623, tensor(2.9741, device='cuda:0'))
(0, 624, tensor(4.1643, device='cuda:0'))
(0, 625, tensor(3.3721, device='cuda:0'))
(0, 626, tensor(3.7703, device='cuda:0'))
(0, 627, tensor(2.9083, device='cuda:0'))
(0, 628, tensor(3.7519, device='cuda:0'))
Process Process-5:
Traceback (most recent call last):
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/multiprocessing/process.py", line 267, in _bootstrap
    self.run()
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/site-packages/torch/utils/data/dataloader.py", line 61, in _worker_loop
    data_queue.put((idx, samples))
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/multiprocessing/queues.py", line 390, in put
    return send(obj)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/site-packages/torch/multiprocessing/queue.py", line 17, in send
    ForkingPickler(buf, pickle.HIGHEST_PROTOCOL).dump(obj)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 224, in dump
    self.save(obj)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 286, in save
    f(self, obj) # Call unbound method with explicit self
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 554, in save_tuple
    save(element)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 286, in save
    f(self, obj) # Call unbound method with explicit self
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 606, in save_list
    self._batch_appends(iter(obj))
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 639, in _batch_appends
    save(x)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 331, in save
    self.save_reduce(obj=obj, *rv)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 401, in save_reduce
    save(args)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 286, in save
    f(self, obj) # Call unbound method with explicit self
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 568, in save_tuple
    save(element)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 286, in save
    f(self, obj) # Call unbound method with explicit self
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/multiprocessing/forking.py", line 66, in dispatcher
    rv = reduce(obj)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/site-packages/torch/multiprocessing/reductions.py", line 121, in reduce_storage
Process Process-1:
Traceback (most recent call last):
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/multiprocessing/process.py", line 267, in _bootstrap
    self.run()
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/site-packages/torch/utils/data/dataloader.py", line 61, in _worker_loop
    data_queue.put((idx, samples))
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/multiprocessing/queues.py", line 390, in put
    return send(obj)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/site-packages/torch/multiprocessing/queue.py", line 17, in send
    ForkingPickler(buf, pickle.HIGHEST_PROTOCOL).dump(obj)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 224, in dump
    self.save(obj)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 286, in save
    f(self, obj) # Call unbound method with explicit self
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 554, in save_tuple
    save(element)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 286, in save
    f(self, obj) # Call unbound method with explicit self
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 606, in save_list
    self._batch_appends(iter(obj))
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 639, in _batch_appends
    save(x)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 331, in save
    self.save_reduce(obj=obj, *rv)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 401, in save_reduce
    save(args)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 286, in save
    f(self, obj) # Call unbound method with explicit self
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 568, in save_tuple
    save(element)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 286, in save
    f(self, obj) # Call unbound method with explicit self
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/multiprocessing/forking.py", line 66, in dispatcher
    rv = reduce(obj)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/site-packages/torch/multiprocessing/reductions.py", line 121, in reduce_storage
Process Process-3:
Traceback (most recent call last):
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/multiprocessing/process.py", line 267, in _bootstrap
    self.run()
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/site-packages/torch/utils/data/dataloader.py", line 61, in _worker_loop
    data_queue.put((idx, samples))
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/multiprocessing/queues.py", line 390, in put
    return send(obj)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/site-packages/torch/multiprocessing/queue.py", line 17, in send
    ForkingPickler(buf, pickle.HIGHEST_PROTOCOL).dump(obj)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 224, in dump
    self.save(obj)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 286, in save
    f(self, obj) # Call unbound method with explicit self
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 554, in save_tuple
    save(element)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 286, in save
    f(self, obj) # Call unbound method with explicit self
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 606, in save_list
    self._batch_appends(iter(obj))
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 639, in _batch_appends
    save(x)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 331, in save
    self.save_reduce(obj=obj, *rv)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 401, in save_reduce
    save(args)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 286, in save
    f(self, obj) # Call unbound method with explicit self
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 568, in save_tuple
    save(element)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 286, in save
    f(self, obj) # Call unbound method with explicit self
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/multiprocessing/forking.py", line 66, in dispatcher
    rv = reduce(obj)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/site-packages/torch/multiprocessing/reductions.py", line 121, in reduce_storage
    fd, size = storage._share_fd_()
    fd, size = storage._share_fd_()
    fd, size = storage._share_fd_()
RuntimeError: unable to write to file </torch_23949_142585507> at /opt/conda/conda-bld/pytorch_1525909934016/work/aten/src/TH/THAllocator.c:383
RuntimeError: unable to write to file </torch_23951_2737118345> at /opt/conda/conda-bld/pytorch_1525909934016/work/aten/src/TH/THAllocator.c:383
RuntimeError: unable to write to file </torch_23953_3601227368> at /opt/conda/conda-bld/pytorch_1525909934016/work/aten/src/TH/THAllocator.c:383
Traceback (most recent call last):
  File "2_C3D_Model_BC.py", line 118, in <module>
    for vid, labels in mn_dataset_loader:  # This makes many itterations until finishes the whole data set which is really long about 6000 videos this menas the the whole system is really slow and we need to chagne something in the future
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/site-packages/torch/utils/data/dataloader.py", line 280, in __next__
    idx, batch = self._get_batch()
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/site-packages/torch/utils/data/dataloader.py", line 259, in _get_batch
    return self.data_queue.get()
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/multiprocessing/queues.py", line 376, in get
    return recv()
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/site-packages/torch/multiprocessing/queue.py", line 21, in recv
    buf = self.recv_bytes()
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/site-packages/torch/utils/data/dataloader.py", line 178, in handler
    _error_if_any_worker_fails()
RuntimeError: DataLoader worker (pid 23953) exited unexpectedly with exit code 1.
Exception NameError: "global name 'FileNotFoundError' is not defined" in <bound method _DataLoaderIter.__del__ of <torch.utils.data.dataloader._DataLoaderIter object at 0x2ba72ef8ac10>> ignored
