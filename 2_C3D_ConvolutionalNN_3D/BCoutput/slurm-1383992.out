/tmp/slurmd/job1383992/slurm_script: line 9: cd: qb18517/11_DT/dynamicTextureMain/4_C3D_ConvolutionalNN_3D/: No such file or directory
cuda:0
No handlers could be found for logger "libav.swscaler"
No handlers could be found for logger "libav.swscaler"
No handlers could be found for logger "libav.swscaler"
2_C3D_Model_BC.py:93: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.
  return F.log_softmax(x)
2_C3D_Model_BC.py:135: UserWarning: invalid index of a 0-dim tensor. This will be an error in PyTorch 0.5. Use tensor.item() to convert a 0-dim tensor to a Python number
  print(epoch,i,loss.data[0])#, loss.data[0])
(0, 1, tensor(3.7613, device='cuda:0'))
(0, 2, tensor(3.9064, device='cuda:0'))
(0, 3, tensor(3.7883, device='cuda:0'))
(0, 4, tensor(3.8588, device='cuda:0'))
(0, 5, tensor(3.7915, device='cuda:0'))
(0, 6, tensor(3.8499, device='cuda:0'))
(0, 7, tensor(3.8138, device='cuda:0'))
(0, 8, tensor(3.8793, device='cuda:0'))
(0, 9, tensor(3.7352, device='cuda:0'))
(0, 10, tensor(3.7906, device='cuda:0'))
(0, 11, tensor(3.8615, device='cuda:0'))
(0, 12, tensor(3.7910, device='cuda:0'))
(0, 13, tensor(3.8193, device='cuda:0'))
(0, 14, tensor(3.8483, device='cuda:0'))
(0, 15, tensor(3.7743, device='cuda:0'))
(0, 16, tensor(3.7119, device='cuda:0'))
(0, 17, tensor(3.6859, device='cuda:0'))
No handlers could be found for logger "libav.swscaler"
(0, 18, tensor(3.6730, device='cuda:0'))
No handlers could be found for logger "libav.swscaler"
(0, 19, tensor(3.8809, device='cuda:0'))
No handlers could be found for logger "libav.swscaler"
(0, 20, tensor(3.5394, device='cuda:0'))
(0, 21, tensor(3.8501, device='cuda:0'))
(0, 22, tensor(3.9936, device='cuda:0'))
(0, 23, tensor(3.7265, device='cuda:0'))
(0, 24, tensor(3.7664, device='cuda:0'))
(0, 25, tensor(3.6977, device='cuda:0'))
No handlers could be found for logger "libav.swscaler"
(0, 26, tensor(3.7816, device='cuda:0'))
(0, 27, tensor(3.9219, device='cuda:0'))
(0, 28, tensor(3.7949, device='cuda:0'))
(0, 29, tensor(3.7755, device='cuda:0'))
(0, 30, tensor(3.8070, device='cuda:0'))
(0, 31, tensor(3.6543, device='cuda:0'))
(0, 32, tensor(3.7904, device='cuda:0'))
(0, 33, tensor(3.8158, device='cuda:0'))
(0, 34, tensor(3.7205, device='cuda:0'))
(0, 35, tensor(3.7683, device='cuda:0'))
(0, 36, tensor(3.7594, device='cuda:0'))
(0, 37, tensor(3.5907, device='cuda:0'))
(0, 38, tensor(3.6903, device='cuda:0'))
(0, 39, tensor(3.6192, device='cuda:0'))
(0, 40, tensor(3.7464, device='cuda:0'))
(0, 41, tensor(3.8577, device='cuda:0'))
(0, 42, tensor(4.0840, device='cuda:0'))
(0, 43, tensor(3.7285, device='cuda:0'))
(0, 44, tensor(3.7559, device='cuda:0'))
(0, 45, tensor(3.7120, device='cuda:0'))
(0, 46, tensor(3.7235, device='cuda:0'))
(0, 47, tensor(3.7501, device='cuda:0'))
(0, 48, tensor(3.8107, device='cuda:0'))
(0, 49, tensor(3.7166, device='cuda:0'))
No handlers could be found for logger "libav.swscaler"
(0, 50, tensor(3.7175, device='cuda:0'))
(0, 51, tensor(3.9732, device='cuda:0'))
(0, 52, tensor(3.8018, device='cuda:0'))
(0, 53, tensor(3.5836, device='cuda:0'))
(0, 54, tensor(3.7256, device='cuda:0'))
(0, 55, tensor(3.9627, device='cuda:0'))
(0, 56, tensor(3.7342, device='cuda:0'))
(0, 57, tensor(3.7820, device='cuda:0'))
(0, 58, tensor(3.9769, device='cuda:0'))
(0, 59, tensor(3.7120, device='cuda:0'))
(0, 60, tensor(3.8819, device='cuda:0'))
(0, 61, tensor(3.7221, device='cuda:0'))
(0, 62, tensor(3.8497, device='cuda:0'))
(0, 63, tensor(3.6332, device='cuda:0'))
(0, 64, tensor(3.7688, device='cuda:0'))
(0, 65, tensor(3.6017, device='cuda:0'))
(0, 66, tensor(3.7711, device='cuda:0'))
(0, 67, tensor(3.7754, device='cuda:0'))
(0, 68, tensor(3.8935, device='cuda:0'))
(0, 69, tensor(3.6986, device='cuda:0'))
(0, 70, tensor(3.7550, device='cuda:0'))
(0, 71, tensor(3.5979, device='cuda:0'))
(0, 72, tensor(3.8525, device='cuda:0'))
(0, 73, tensor(3.9050, device='cuda:0'))
(0, 74, tensor(3.6699, device='cuda:0'))
(0, 75, tensor(3.7749, device='cuda:0'))
(0, 76, tensor(3.6096, device='cuda:0'))
(0, 77, tensor(3.8171, device='cuda:0'))
(0, 78, tensor(3.8047, device='cuda:0'))
(0, 79, tensor(3.5710, device='cuda:0'))
(0, 80, tensor(3.7238, device='cuda:0'))
(0, 81, tensor(3.9130, device='cuda:0'))
(0, 82, tensor(3.9847, device='cuda:0'))
(0, 83, tensor(3.5990, device='cuda:0'))
(0, 84, tensor(3.8594, device='cuda:0'))
(0, 85, tensor(3.8167, device='cuda:0'))
(0, 86, tensor(3.8003, device='cuda:0'))
(0, 87, tensor(3.7915, device='cuda:0'))
(0, 88, tensor(3.7768, device='cuda:0'))
(0, 89, tensor(3.7207, device='cuda:0'))
(0, 90, tensor(3.9174, device='cuda:0'))
(0, 91, tensor(3.7964, device='cuda:0'))
(0, 92, tensor(3.7435, device='cuda:0'))
(0, 93, tensor(3.7642, device='cuda:0'))
(0, 94, tensor(3.6845, device='cuda:0'))
(0, 95, tensor(3.7847, device='cuda:0'))
(0, 96, tensor(3.7352, device='cuda:0'))
(0, 97, tensor(3.7515, device='cuda:0'))
(0, 98, tensor(3.7125, device='cuda:0'))
(0, 99, tensor(3.8602, device='cuda:0'))
(0, 100, tensor(3.7089, device='cuda:0'))
(0, 101, tensor(3.5513, device='cuda:0'))
(0, 102, tensor(3.8958, device='cuda:0'))
(0, 103, tensor(3.7667, device='cuda:0'))
(0, 104, tensor(3.5722, device='cuda:0'))
(0, 105, tensor(3.8311, device='cuda:0'))
(0, 106, tensor(3.6246, device='cuda:0'))
(0, 107, tensor(3.6850, device='cuda:0'))
(0, 108, tensor(3.7923, device='cuda:0'))
(0, 109, tensor(3.6896, device='cuda:0'))
(0, 110, tensor(3.8920, device='cuda:0'))
(0, 111, tensor(3.7771, device='cuda:0'))
(0, 112, tensor(3.8849, device='cuda:0'))
(0, 113, tensor(3.7004, device='cuda:0'))
(0, 114, tensor(3.5712, device='cuda:0'))
(0, 115, tensor(3.7870, device='cuda:0'))
(0, 116, tensor(3.7600, device='cuda:0'))
(0, 117, tensor(3.8139, device='cuda:0'))
(0, 118, tensor(3.5929, device='cuda:0'))
(0, 119, tensor(3.6527, device='cuda:0'))
(0, 120, tensor(3.7793, device='cuda:0'))
(0, 121, tensor(3.7320, device='cuda:0'))
(0, 122, tensor(3.6703, device='cuda:0'))
(0, 123, tensor(3.8371, device='cuda:0'))
(0, 124, tensor(3.7573, device='cuda:0'))
(0, 125, tensor(3.7049, device='cuda:0'))
(0, 126, tensor(3.8951, device='cuda:0'))
(0, 127, tensor(3.8140, device='cuda:0'))
(0, 128, tensor(3.4648, device='cuda:0'))
(0, 129, tensor(3.8807, device='cuda:0'))
(0, 130, tensor(3.6826, device='cuda:0'))
(0, 131, tensor(3.5569, device='cuda:0'))
(0, 132, tensor(3.8306, device='cuda:0'))
(0, 133, tensor(3.6769, device='cuda:0'))
(0, 134, tensor(3.7865, device='cuda:0'))
(0, 135, tensor(3.6344, device='cuda:0'))
(0, 136, tensor(3.6698, device='cuda:0'))
(0, 137, tensor(3.6815, device='cuda:0'))
(0, 138, tensor(3.8680, device='cuda:0'))
(0, 139, tensor(3.5889, device='cuda:0'))
(0, 140, tensor(3.8648, device='cuda:0'))
(0, 141, tensor(3.8184, device='cuda:0'))
(0, 142, tensor(3.5482, device='cuda:0'))
(0, 143, tensor(3.6019, device='cuda:0'))
(0, 144, tensor(3.6295, device='cuda:0'))
(0, 145, tensor(3.6414, device='cuda:0'))
(0, 146, tensor(3.5968, device='cuda:0'))
(0, 147, tensor(3.7033, device='cuda:0'))
(0, 148, tensor(3.7489, device='cuda:0'))
(0, 149, tensor(3.7976, device='cuda:0'))
(0, 150, tensor(3.6765, device='cuda:0'))
(0, 151, tensor(3.8012, device='cuda:0'))
(0, 152, tensor(3.8090, device='cuda:0'))
(0, 153, tensor(3.5508, device='cuda:0'))
(0, 154, tensor(3.6619, device='cuda:0'))
(0, 155, tensor(3.5517, device='cuda:0'))
(0, 156, tensor(3.4412, device='cuda:0'))
(0, 157, tensor(4.0611, device='cuda:0'))
(0, 158, tensor(3.7435, device='cuda:0'))
(0, 159, tensor(4.0214, device='cuda:0'))
(0, 160, tensor(3.8071, device='cuda:0'))
(0, 161, tensor(3.7528, device='cuda:0'))
(0, 162, tensor(3.5869, device='cuda:0'))
(0, 163, tensor(3.8321, device='cuda:0'))
(0, 164, tensor(3.7400, device='cuda:0'))
(0, 165, tensor(3.6938, device='cuda:0'))
(0, 166, tensor(3.7696, device='cuda:0'))
(0, 167, tensor(3.6632, device='cuda:0'))
(0, 168, tensor(3.9937, device='cuda:0'))
(0, 169, tensor(3.8668, device='cuda:0'))
(0, 170, tensor(3.6819, device='cuda:0'))
(0, 171, tensor(3.7677, device='cuda:0'))
(0, 172, tensor(3.7467, device='cuda:0'))
(0, 173, tensor(3.7752, device='cuda:0'))
(0, 174, tensor(3.5330, device='cuda:0'))
(0, 175, tensor(3.7799, device='cuda:0'))
(0, 176, tensor(3.6581, device='cuda:0'))
(0, 177, tensor(3.6491, device='cuda:0'))
(0, 178, tensor(3.5917, device='cuda:0'))
(0, 179, tensor(3.7800, device='cuda:0'))
(0, 180, tensor(3.5462, device='cuda:0'))
(0, 181, tensor(3.4866, device='cuda:0'))
(0, 182, tensor(3.9095, device='cuda:0'))
(0, 183, tensor(3.5100, device='cuda:0'))
(0, 184, tensor(3.9797, device='cuda:0'))
(0, 185, tensor(3.6757, device='cuda:0'))
(0, 186, tensor(3.7096, device='cuda:0'))
(0, 187, tensor(3.6782, device='cuda:0'))
(0, 188, tensor(3.7182, device='cuda:0'))
(0, 189, tensor(3.5667, device='cuda:0'))
(0, 190, tensor(3.7008, device='cuda:0'))
(0, 191, tensor(3.6255, device='cuda:0'))
(0, 192, tensor(3.4513, device='cuda:0'))
(0, 193, tensor(3.8575, device='cuda:0'))
(0, 194, tensor(3.8538, device='cuda:0'))
(0, 195, tensor(3.4770, device='cuda:0'))
(0, 196, tensor(3.6652, device='cuda:0'))
(0, 197, tensor(3.7288, device='cuda:0'))
(0, 198, tensor(3.5448, device='cuda:0'))
(0, 199, tensor(3.7448, device='cuda:0'))
(0, 200, tensor(3.8995, device='cuda:0'))
(0, 201, tensor(3.8537, device='cuda:0'))
(0, 202, tensor(3.6235, device='cuda:0'))
(0, 203, tensor(3.8232, device='cuda:0'))
(0, 204, tensor(3.6548, device='cuda:0'))
(0, 205, tensor(3.6941, device='cuda:0'))
(0, 206, tensor(3.6485, device='cuda:0'))
(0, 207, tensor(3.6519, device='cuda:0'))
(0, 208, tensor(3.9373, device='cuda:0'))
(0, 209, tensor(3.6223, device='cuda:0'))
(0, 210, tensor(3.6110, device='cuda:0'))
(0, 211, tensor(3.5259, device='cuda:0'))
(0, 212, tensor(3.4593, device='cuda:0'))
(0, 213, tensor(3.7132, device='cuda:0'))
(0, 214, tensor(3.6797, device='cuda:0'))
(0, 215, tensor(3.8447, device='cuda:0'))
(0, 216, tensor(3.7861, device='cuda:0'))
(0, 217, tensor(3.5975, device='cuda:0'))
(0, 218, tensor(3.7520, device='cuda:0'))
(0, 219, tensor(3.6928, device='cuda:0'))
(0, 220, tensor(3.5103, device='cuda:0'))
(0, 221, tensor(3.6055, device='cuda:0'))
(0, 222, tensor(3.9131, device='cuda:0'))
(0, 223, tensor(3.7146, device='cuda:0'))
(0, 224, tensor(4.0547, device='cuda:0'))
(0, 225, tensor(3.6885, device='cuda:0'))
(0, 226, tensor(3.6172, device='cuda:0'))
(0, 227, tensor(3.3435, device='cuda:0'))
(0, 228, tensor(3.8582, device='cuda:0'))
(0, 229, tensor(3.7377, device='cuda:0'))
(0, 230, tensor(3.6712, device='cuda:0'))
(0, 231, tensor(3.7092, device='cuda:0'))
(0, 232, tensor(3.3927, device='cuda:0'))
(0, 233, tensor(3.6364, device='cuda:0'))
(0, 234, tensor(3.8409, device='cuda:0'))
(0, 235, tensor(3.9129, device='cuda:0'))
(0, 236, tensor(4.0389, device='cuda:0'))
(0, 237, tensor(3.4823, device='cuda:0'))
(0, 238, tensor(3.6883, device='cuda:0'))
(0, 239, tensor(3.6188, device='cuda:0'))
(0, 240, tensor(3.7975, device='cuda:0'))
(0, 241, tensor(3.8162, device='cuda:0'))
(0, 242, tensor(3.7179, device='cuda:0'))
(0, 243, tensor(3.6031, device='cuda:0'))
(0, 244, tensor(3.6916, device='cuda:0'))
(0, 245, tensor(3.5927, device='cuda:0'))
(0, 246, tensor(3.6453, device='cuda:0'))
(0, 247, tensor(3.6303, device='cuda:0'))
(0, 248, tensor(3.8576, device='cuda:0'))
(0, 249, tensor(3.8753, device='cuda:0'))
(0, 250, tensor(3.7754, device='cuda:0'))
(0, 251, tensor(3.4952, device='cuda:0'))
(0, 252, tensor(3.6529, device='cuda:0'))
(0, 253, tensor(3.5711, device='cuda:0'))
(0, 254, tensor(3.6588, device='cuda:0'))
(0, 255, tensor(3.6595, device='cuda:0'))
(0, 256, tensor(4.0704, device='cuda:0'))
(0, 257, tensor(3.7254, device='cuda:0'))
(0, 258, tensor(3.5364, device='cuda:0'))
(0, 259, tensor(3.7927, device='cuda:0'))
(0, 260, tensor(3.6892, device='cuda:0'))
(0, 261, tensor(3.6904, device='cuda:0'))
(0, 262, tensor(3.5075, device='cuda:0'))
(0, 263, tensor(3.9541, device='cuda:0'))
(0, 264, tensor(3.8197, device='cuda:0'))
(0, 265, tensor(3.6836, device='cuda:0'))
(0, 266, tensor(3.6762, device='cuda:0'))
(0, 267, tensor(3.6592, device='cuda:0'))
(0, 268, tensor(3.4854, device='cuda:0'))
(0, 269, tensor(3.9251, device='cuda:0'))
(0, 270, tensor(3.5624, device='cuda:0'))
(0, 271, tensor(4.0934, device='cuda:0'))
(0, 272, tensor(3.4329, device='cuda:0'))
(0, 273, tensor(3.7784, device='cuda:0'))
(0, 274, tensor(3.9365, device='cuda:0'))
(0, 275, tensor(3.4711, device='cuda:0'))
(0, 276, tensor(3.6117, device='cuda:0'))
(0, 277, tensor(3.8281, device='cuda:0'))
(0, 278, tensor(3.5814, device='cuda:0'))
(0, 279, tensor(3.4076, device='cuda:0'))
(0, 280, tensor(3.6438, device='cuda:0'))
(0, 281, tensor(3.4491, device='cuda:0'))
(0, 282, tensor(3.6691, device='cuda:0'))
(0, 283, tensor(3.4778, device='cuda:0'))
(0, 284, tensor(3.2226, device='cuda:0'))
(0, 285, tensor(3.8860, device='cuda:0'))
(0, 286, tensor(3.5324, device='cuda:0'))
(0, 287, tensor(3.4937, device='cuda:0'))
(0, 288, tensor(3.7185, device='cuda:0'))
(0, 289, tensor(3.4109, device='cuda:0'))
(0, 290, tensor(3.6216, device='cuda:0'))
(0, 291, tensor(3.4320, device='cuda:0'))
(0, 292, tensor(4.1854, device='cuda:0'))
(0, 293, tensor(3.9955, device='cuda:0'))
(0, 294, tensor(3.8016, device='cuda:0'))
(0, 295, tensor(3.6294, device='cuda:0'))
(0, 296, tensor(3.7349, device='cuda:0'))
(0, 297, tensor(3.5291, device='cuda:0'))
(0, 298, tensor(3.6127, device='cuda:0'))
(0, 299, tensor(3.4433, device='cuda:0'))
(0, 300, tensor(3.8964, device='cuda:0'))
(0, 301, tensor(3.5018, device='cuda:0'))
(0, 302, tensor(3.6769, device='cuda:0'))
(0, 303, tensor(3.5252, device='cuda:0'))
(0, 304, tensor(3.7553, device='cuda:0'))
(0, 305, tensor(3.4838, device='cuda:0'))
(0, 306, tensor(3.7946, device='cuda:0'))
(0, 307, tensor(3.8904, device='cuda:0'))
(0, 308, tensor(3.5017, device='cuda:0'))
(0, 309, tensor(3.9446, device='cuda:0'))
(0, 310, tensor(3.6663, device='cuda:0'))
(0, 311, tensor(3.6141, device='cuda:0'))
(0, 312, tensor(3.4595, device='cuda:0'))
(0, 313, tensor(3.9177, device='cuda:0'))
(0, 314, tensor(3.6314, device='cuda:0'))
(0, 315, tensor(3.8001, device='cuda:0'))
(0, 316, tensor(3.7740, device='cuda:0'))
(0, 317, tensor(3.7258, device='cuda:0'))
(0, 318, tensor(3.6056, device='cuda:0'))
(0, 319, tensor(3.5259, device='cuda:0'))
(0, 320, tensor(3.0516, device='cuda:0'))
(0, 321, tensor(3.8623, device='cuda:0'))
(0, 322, tensor(3.6178, device='cuda:0'))
(0, 323, tensor(3.4773, device='cuda:0'))
(0, 324, tensor(3.1287, device='cuda:0'))
(0, 325, tensor(3.6686, device='cuda:0'))
(0, 326, tensor(3.2191, device='cuda:0'))
(0, 327, tensor(3.2124, device='cuda:0'))
(0, 328, tensor(3.3939, device='cuda:0'))
(0, 329, tensor(4.1126, device='cuda:0'))
(0, 330, tensor(3.6366, device='cuda:0'))
(0, 331, tensor(3.5700, device='cuda:0'))
(0, 332, tensor(3.6489, device='cuda:0'))
(0, 333, tensor(3.7930, device='cuda:0'))
(0, 334, tensor(3.8061, device='cuda:0'))
(0, 335, tensor(3.4499, device='cuda:0'))
(0, 336, tensor(3.7623, device='cuda:0'))
(0, 337, tensor(3.6254, device='cuda:0'))
(0, 338, tensor(3.6206, device='cuda:0'))
(0, 339, tensor(3.3238, device='cuda:0'))
(0, 340, tensor(3.3284, device='cuda:0'))
(0, 341, tensor(3.5581, device='cuda:0'))
(0, 342, tensor(3.7545, device='cuda:0'))
(0, 343, tensor(3.6641, device='cuda:0'))
(0, 344, tensor(3.7307, device='cuda:0'))
(0, 345, tensor(3.6277, device='cuda:0'))
(0, 346, tensor(3.5498, device='cuda:0'))
(0, 347, tensor(3.6196, device='cuda:0'))
(0, 348, tensor(3.5677, device='cuda:0'))
(0, 349, tensor(3.7567, device='cuda:0'))
(0, 350, tensor(3.6065, device='cuda:0'))
(0, 351, tensor(3.8570, device='cuda:0'))
(0, 352, tensor(3.5825, device='cuda:0'))
(0, 353, tensor(3.6465, device='cuda:0'))
(0, 354, tensor(3.6339, device='cuda:0'))
(0, 355, tensor(3.5229, device='cuda:0'))
(0, 356, tensor(3.5128, device='cuda:0'))
(0, 357, tensor(3.7146, device='cuda:0'))
(0, 358, tensor(3.5497, device='cuda:0'))
(0, 359, tensor(3.4544, device='cuda:0'))
(0, 360, tensor(3.9064, device='cuda:0'))
(0, 361, tensor(3.8443, device='cuda:0'))
(0, 362, tensor(3.5463, device='cuda:0'))
(0, 363, tensor(2.9559, device='cuda:0'))
(0, 364, tensor(3.8075, device='cuda:0'))
(0, 365, tensor(3.8544, device='cuda:0'))
(0, 366, tensor(3.7275, device='cuda:0'))
(0, 367, tensor(3.3810, device='cuda:0'))
(0, 368, tensor(3.6052, device='cuda:0'))
(0, 369, tensor(3.8879, device='cuda:0'))
(0, 370, tensor(3.5481, device='cuda:0'))
(0, 371, tensor(3.2065, device='cuda:0'))
(0, 372, tensor(3.7463, device='cuda:0'))
(0, 373, tensor(3.6342, device='cuda:0'))
(0, 374, tensor(3.5664, device='cuda:0'))
(0, 375, tensor(3.6883, device='cuda:0'))
(0, 376, tensor(3.4798, device='cuda:0'))
(0, 377, tensor(3.5219, device='cuda:0'))
(0, 378, tensor(3.4080, device='cuda:0'))
(0, 379, tensor(3.5120, device='cuda:0'))
(0, 380, tensor(3.5709, device='cuda:0'))
(0, 381, tensor(3.8637, device='cuda:0'))
(0, 382, tensor(3.4342, device='cuda:0'))
(0, 383, tensor(3.8337, device='cuda:0'))
(0, 384, tensor(3.8936, device='cuda:0'))
(0, 385, tensor(3.2963, device='cuda:0'))
(0, 386, tensor(3.5957, device='cuda:0'))
(0, 387, tensor(3.7028, device='cuda:0'))
(0, 388, tensor(3.5186, device='cuda:0'))
(0, 389, tensor(3.7003, device='cuda:0'))
(0, 390, tensor(3.2713, device='cuda:0'))
(0, 391, tensor(3.6630, device='cuda:0'))
(0, 392, tensor(3.7134, device='cuda:0'))
(0, 393, tensor(3.4689, device='cuda:0'))
(0, 394, tensor(3.6888, device='cuda:0'))
(0, 395, tensor(3.7846, device='cuda:0'))
(0, 396, tensor(3.4689, device='cuda:0'))
(0, 397, tensor(3.7186, device='cuda:0'))
(0, 398, tensor(3.5766, device='cuda:0'))
(0, 399, tensor(3.4444, device='cuda:0'))
(0, 400, tensor(3.5505, device='cuda:0'))
(0, 401, tensor(3.5452, device='cuda:0'))
(0, 402, tensor(3.0991, device='cuda:0'))
(0, 403, tensor(3.1758, device='cuda:0'))
(0, 404, tensor(3.8806, device='cuda:0'))
(0, 405, tensor(3.6618, device='cuda:0'))
(0, 406, tensor(3.3589, device='cuda:0'))
(0, 407, tensor(3.5939, device='cuda:0'))
(0, 408, tensor(3.6340, device='cuda:0'))
(0, 409, tensor(3.3273, device='cuda:0'))
(0, 410, tensor(4.0915, device='cuda:0'))
(0, 411, tensor(3.3214, device='cuda:0'))
(0, 412, tensor(3.4118, device='cuda:0'))
(0, 413, tensor(3.7516, device='cuda:0'))
(0, 414, tensor(3.3681, device='cuda:0'))
(0, 415, tensor(3.4098, device='cuda:0'))
(0, 416, tensor(3.5091, device='cuda:0'))
(0, 417, tensor(3.6888, device='cuda:0'))
(0, 418, tensor(3.4787, device='cuda:0'))
(0, 419, tensor(3.2677, device='cuda:0'))
(0, 420, tensor(3.3843, device='cuda:0'))
(0, 421, tensor(3.0430, device='cuda:0'))
(0, 422, tensor(3.2210, device='cuda:0'))
(0, 423, tensor(3.7140, device='cuda:0'))
(0, 424, tensor(3.5058, device='cuda:0'))
(0, 425, tensor(3.8387, device='cuda:0'))
(0, 426, tensor(3.5519, device='cuda:0'))
(0, 427, tensor(3.9582, device='cuda:0'))
(0, 428, tensor(3.5622, device='cuda:0'))
(0, 429, tensor(3.1282, device='cuda:0'))
(0, 430, tensor(3.8445, device='cuda:0'))
(0, 431, tensor(3.5419, device='cuda:0'))
(0, 432, tensor(3.4187, device='cuda:0'))
(0, 433, tensor(3.5610, device='cuda:0'))
(0, 434, tensor(3.5323, device='cuda:0'))
(0, 435, tensor(2.8950, device='cuda:0'))
(0, 436, tensor(3.0173, device='cuda:0'))
(0, 437, tensor(3.5311, device='cuda:0'))
(0, 438, tensor(3.3726, device='cuda:0'))
(0, 439, tensor(4.0734, device='cuda:0'))
(0, 440, tensor(3.5144, device='cuda:0'))
(0, 441, tensor(3.5208, device='cuda:0'))
(0, 442, tensor(3.6699, device='cuda:0'))
(0, 443, tensor(3.3132, device='cuda:0'))
(0, 444, tensor(3.2957, device='cuda:0'))
(0, 445, tensor(3.8496, device='cuda:0'))
(0, 446, tensor(3.5481, device='cuda:0'))
(0, 447, tensor(3.5639, device='cuda:0'))
(0, 448, tensor(3.4036, device='cuda:0'))
(0, 449, tensor(3.5890, device='cuda:0'))
(0, 450, tensor(3.3417, device='cuda:0'))
(0, 451, tensor(3.9411, device='cuda:0'))
(0, 452, tensor(3.5346, device='cuda:0'))
(0, 453, tensor(2.9998, device='cuda:0'))
(0, 454, tensor(3.6061, device='cuda:0'))
(0, 455, tensor(3.4028, device='cuda:0'))
(0, 456, tensor(3.4839, device='cuda:0'))
(0, 457, tensor(3.7851, device='cuda:0'))
(0, 458, tensor(3.3375, device='cuda:0'))
(0, 459, tensor(3.6478, device='cuda:0'))
(0, 460, tensor(3.2203, device='cuda:0'))
(0, 461, tensor(3.5621, device='cuda:0'))
(0, 462, tensor(3.7566, device='cuda:0'))
(0, 463, tensor(2.9079, device='cuda:0'))
(0, 464, tensor(2.8450, device='cuda:0'))
(0, 465, tensor(3.4742, device='cuda:0'))
(0, 466, tensor(4.2987, device='cuda:0'))
(0, 467, tensor(3.2990, device='cuda:0'))
(0, 468, tensor(3.2452, device='cuda:0'))
(0, 469, tensor(3.5278, device='cuda:0'))
(0, 470, tensor(3.8802, device='cuda:0'))
(0, 471, tensor(3.4313, device='cuda:0'))
(0, 472, tensor(3.3536, device='cuda:0'))
(0, 473, tensor(3.5111, device='cuda:0'))
(0, 474, tensor(3.6892, device='cuda:0'))
(0, 475, tensor(3.1853, device='cuda:0'))
(0, 476, tensor(3.5533, device='cuda:0'))
(0, 477, tensor(3.2926, device='cuda:0'))
(0, 478, tensor(3.9560, device='cuda:0'))
(0, 479, tensor(3.7499, device='cuda:0'))
(0, 480, tensor(3.5786, device='cuda:0'))
(0, 481, tensor(3.5300, device='cuda:0'))
(0, 482, tensor(3.6349, device='cuda:0'))
(0, 483, tensor(3.7907, device='cuda:0'))
(0, 484, tensor(3.4199, device='cuda:0'))
(0, 485, tensor(3.5970, device='cuda:0'))
(0, 486, tensor(3.4669, device='cuda:0'))
(0, 487, tensor(3.4064, device='cuda:0'))
(0, 488, tensor(3.0446, device='cuda:0'))
(0, 489, tensor(3.6081, device='cuda:0'))
(0, 490, tensor(3.9603, device='cuda:0'))
(0, 491, tensor(3.4385, device='cuda:0'))
(0, 492, tensor(3.5608, device='cuda:0'))
(0, 493, tensor(3.5465, device='cuda:0'))
(0, 494, tensor(3.4034, device='cuda:0'))
(0, 495, tensor(3.5224, device='cuda:0'))
(0, 496, tensor(3.1542, device='cuda:0'))
(0, 497, tensor(3.4757, device='cuda:0'))
(0, 498, tensor(3.4168, device='cuda:0'))
(0, 499, tensor(3.4837, device='cuda:0'))
(0, 500, tensor(3.3755, device='cuda:0'))
(0, 501, tensor(3.1714, device='cuda:0'))
(0, 502, tensor(3.8542, device='cuda:0'))
(0, 503, tensor(3.5914, device='cuda:0'))
(0, 504, tensor(3.5757, device='cuda:0'))
(0, 505, tensor(3.9599, device='cuda:0'))
(0, 506, tensor(3.4616, device='cuda:0'))
(0, 507, tensor(3.4360, device='cuda:0'))
(0, 508, tensor(3.4941, device='cuda:0'))
(0, 509, tensor(3.6176, device='cuda:0'))
(0, 510, tensor(3.5269, device='cuda:0'))
(0, 511, tensor(3.3033, device='cuda:0'))
(0, 512, tensor(3.4798, device='cuda:0'))
(0, 513, tensor(3.8948, device='cuda:0'))
(0, 514, tensor(3.7156, device='cuda:0'))
(0, 515, tensor(3.9580, device='cuda:0'))
(0, 516, tensor(3.7125, device='cuda:0'))
(0, 517, tensor(3.5954, device='cuda:0'))
(0, 518, tensor(3.7505, device='cuda:0'))
(0, 519, tensor(3.6863, device='cuda:0'))
(0, 520, tensor(3.5802, device='cuda:0'))
(0, 521, tensor(3.7056, device='cuda:0'))
(0, 522, tensor(3.6798, device='cuda:0'))
(0, 523, tensor(3.2852, device='cuda:0'))
(0, 524, tensor(3.7274, device='cuda:0'))
(0, 525, tensor(3.4959, device='cuda:0'))
(0, 526, tensor(3.4414, device='cuda:0'))
(0, 527, tensor(3.5028, device='cuda:0'))
(0, 528, tensor(3.3455, device='cuda:0'))
(0, 529, tensor(3.6229, device='cuda:0'))
(0, 530, tensor(3.2545, device='cuda:0'))
(0, 531, tensor(3.7019, device='cuda:0'))
(0, 532, tensor(3.5488, device='cuda:0'))
(0, 533, tensor(3.3931, device='cuda:0'))
(0, 534, tensor(3.8669, device='cuda:0'))
(0, 535, tensor(2.9662, device='cuda:0'))
(0, 536, tensor(3.3331, device='cuda:0'))
(0, 537, tensor(3.1145, device='cuda:0'))
(0, 538, tensor(3.0952, device='cuda:0'))
(0, 539, tensor(3.2763, device='cuda:0'))
(0, 540, tensor(3.5655, device='cuda:0'))
(0, 541, tensor(2.9396, device='cuda:0'))
(0, 542, tensor(2.5850, device='cuda:0'))
(0, 543, tensor(3.2624, device='cuda:0'))
(0, 544, tensor(2.9034, device='cuda:0'))
(0, 545, tensor(3.9361, device='cuda:0'))
(0, 546, tensor(3.1313, device='cuda:0'))
(0, 547, tensor(3.5683, device='cuda:0'))
(0, 548, tensor(3.4038, device='cuda:0'))
(0, 549, tensor(3.2911, device='cuda:0'))
(0, 550, tensor(3.3472, device='cuda:0'))
(0, 551, tensor(3.1867, device='cuda:0'))
(0, 552, tensor(3.8294, device='cuda:0'))
(0, 553, tensor(3.6577, device='cuda:0'))
(0, 554, tensor(3.2296, device='cuda:0'))
(0, 555, tensor(3.3691, device='cuda:0'))
(0, 556, tensor(3.2059, device='cuda:0'))
(0, 557, tensor(3.8730, device='cuda:0'))
(0, 558, tensor(3.1723, device='cuda:0'))
(0, 559, tensor(2.8927, device='cuda:0'))
(0, 560, tensor(4.0520, device='cuda:0'))
(0, 561, tensor(3.5425, device='cuda:0'))
(0, 562, tensor(3.6898, device='cuda:0'))
(0, 563, tensor(3.5349, device='cuda:0'))
(0, 564, tensor(3.7804, device='cuda:0'))
(0, 565, tensor(3.0202, device='cuda:0'))
(0, 566, tensor(3.4228, device='cuda:0'))
(0, 567, tensor(3.8686, device='cuda:0'))
(0, 568, tensor(3.5689, device='cuda:0'))
(0, 569, tensor(3.1676, device='cuda:0'))
(0, 570, tensor(3.7497, device='cuda:0'))
(0, 571, tensor(3.3452, device='cuda:0'))
(0, 572, tensor(3.6892, device='cuda:0'))
(0, 573, tensor(3.3761, device='cuda:0'))
(0, 574, tensor(3.2994, device='cuda:0'))
(0, 575, tensor(3.4359, device='cuda:0'))
(0, 576, tensor(4.1035, device='cuda:0'))
(0, 577, tensor(3.7025, device='cuda:0'))
(0, 578, tensor(3.1438, device='cuda:0'))
(0, 579, tensor(3.3403, device='cuda:0'))
(0, 580, tensor(3.5562, device='cuda:0'))
(0, 581, tensor(3.6254, device='cuda:0'))
(0, 582, tensor(3.5704, device='cuda:0'))
(0, 583, tensor(3.3204, device='cuda:0'))
(0, 584, tensor(3.1748, device='cuda:0'))
(0, 585, tensor(3.4492, device='cuda:0'))
(0, 586, tensor(3.3278, device='cuda:0'))
(0, 587, tensor(3.5678, device='cuda:0'))
(0, 588, tensor(3.2250, device='cuda:0'))
(0, 589, tensor(3.9693, device='cuda:0'))
(0, 590, tensor(3.2579, device='cuda:0'))
(0, 591, tensor(3.2327, device='cuda:0'))
(0, 592, tensor(3.7148, device='cuda:0'))
(0, 593, tensor(3.0681, device='cuda:0'))
(0, 594, tensor(3.1389, device='cuda:0'))
(0, 595, tensor(4.2777, device='cuda:0'))
(0, 596, tensor(3.3286, device='cuda:0'))
(0, 597, tensor(3.4353, device='cuda:0'))
(0, 598, tensor(3.2495, device='cuda:0'))
(0, 599, tensor(2.9091, device='cuda:0'))
(0, 600, tensor(3.5081, device='cuda:0'))
(0, 601, tensor(3.7162, device='cuda:0'))
(0, 602, tensor(3.4872, device='cuda:0'))
(0, 603, tensor(3.1613, device='cuda:0'))
(0, 604, tensor(3.0883, device='cuda:0'))
(0, 605, tensor(3.0972, device='cuda:0'))
(0, 606, tensor(2.8776, device='cuda:0'))
(0, 607, tensor(3.4344, device='cuda:0'))
(0, 608, tensor(3.0225, device='cuda:0'))
(0, 609, tensor(3.2426, device='cuda:0'))
(0, 610, tensor(3.3038, device='cuda:0'))
(0, 611, tensor(3.5137, device='cuda:0'))
(0, 612, tensor(3.0633, device='cuda:0'))
(0, 613, tensor(3.4336, device='cuda:0'))
(0, 614, tensor(3.5158, device='cuda:0'))
(0, 615, tensor(3.8537, device='cuda:0'))
(0, 616, tensor(3.1351, device='cuda:0'))
(0, 617, tensor(3.1149, device='cuda:0'))
(0, 618, tensor(3.3231, device='cuda:0'))
(0, 619, tensor(3.0145, device='cuda:0'))
(0, 620, tensor(3.0118, device='cuda:0'))
(0, 621, tensor(3.1651, device='cuda:0'))
(0, 622, tensor(3.1823, device='cuda:0'))
(0, 623, tensor(3.2211, device='cuda:0'))
(0, 624, tensor(3.5222, device='cuda:0'))
(0, 625, tensor(2.8483, device='cuda:0'))
(0, 626, tensor(2.8832, device='cuda:0'))
(0, 627, tensor(3.6316, device='cuda:0'))
Process Process-4:
Traceback (most recent call last):
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/multiprocessing/process.py", line 267, in _bootstrap
    self.run()
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/site-packages/torch/utils/data/dataloader.py", line 61, in _worker_loop
    data_queue.put((idx, samples))
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/multiprocessing/queues.py", line 390, in put
    return send(obj)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/site-packages/torch/multiprocessing/queue.py", line 17, in send
    ForkingPickler(buf, pickle.HIGHEST_PROTOCOL).dump(obj)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 224, in dump
Process Process-8:
Traceback (most recent call last):
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/multiprocessing/process.py", line 267, in _bootstrap
    self.run()
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/site-packages/torch/utils/data/dataloader.py", line 61, in _worker_loop
    data_queue.put((idx, samples))
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/multiprocessing/queues.py", line 390, in put
    return send(obj)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/site-packages/torch/multiprocessing/queue.py", line 17, in send
    ForkingPickler(buf, pickle.HIGHEST_PROTOCOL).dump(obj)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 224, in dump
    self.save(obj)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 286, in save
    self.save(obj)
    f(self, obj) # Call unbound method with explicit self
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 286, in save
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 554, in save_tuple
    save(element)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 286, in save
    f(self, obj) # Call unbound method with explicit self
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 554, in save_tuple
    f(self, obj) # Call unbound method with explicit self
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 606, in save_list
    save(element)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 286, in save
    self._batch_appends(iter(obj))
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 639, in _batch_appends
    f(self, obj) # Call unbound method with explicit self
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 606, in save_list
    save(x)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 331, in save
    self._batch_appends(iter(obj))
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 639, in _batch_appends
    self.save_reduce(obj=obj, *rv)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 401, in save_reduce
    save(x)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 331, in save
    save(args)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 286, in save
    self.save_reduce(obj=obj, *rv)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 401, in save_reduce
    f(self, obj) # Call unbound method with explicit self
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 568, in save_tuple
    save(args)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 286, in save
    save(element)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 286, in save
    f(self, obj) # Call unbound method with explicit self
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 568, in save_tuple
    f(self, obj) # Call unbound method with explicit self
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/multiprocessing/forking.py", line 66, in dispatcher
    save(element)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/pickle.py", line 286, in save
    f(self, obj) # Call unbound method with explicit self
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/multiprocessing/forking.py", line 66, in dispatcher
    rv = reduce(obj)
    rv = reduce(obj)
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/site-packages/torch/multiprocessing/reductions.py", line 121, in reduce_storage
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/site-packages/torch/multiprocessing/reductions.py", line 121, in reduce_storage
    fd, size = storage._share_fd_()
    fd, size = storage._share_fd_()
RuntimeError: unable to write to file </torch_23744_421866287> at /opt/conda/conda-bld/pytorch_1525909934016/work/aten/src/TH/THAllocator.c:383
RuntimeError: unable to write to file </torch_23740_4241150659> at /opt/conda/conda-bld/pytorch_1525909934016/work/aten/src/TH/THAllocator.c:383
Traceback (most recent call last):
  File "2_C3D_Model_BC.py", line 118, in <module>
    for vid, labels in mn_dataset_loader:  # This makes many itterations until finishes the whole data set which is really long about 6000 videos this menas the the whole system is really slow and we need to chagne something in the future
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/site-packages/torch/utils/data/dataloader.py", line 280, in __next__
    idx, batch = self._get_batch()
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/site-packages/torch/utils/data/dataloader.py", line 259, in _get_batch
    return self.data_queue.get()
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/multiprocessing/queues.py", line 376, in get
    return recv()
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/site-packages/torch/multiprocessing/queue.py", line 21, in recv
    buf = self.recv_bytes()
  File "/mnt/storage/home/qb18517/qb18517/.conda/envs/pytorch/lib/python2.7/site-packages/torch/utils/data/dataloader.py", line 178, in handler
    _error_if_any_worker_fails()
RuntimeError: DataLoader worker (pid 23744) exited unexpectedly with exit code 1.
